name: Security Scan

on:
  schedule:
    # Run security scan every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  security-scan:
    name: Comprehensive Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd frontend && yarn install --frozen-lockfile
          cd ../backend && pip install -r requirements.txt

      # Frontend Security Scans
      - name: Run npm audit
        run: |
          cd frontend
          npm audit --audit-level=moderate --json > npm-audit-report.json || true

      - name: Run Snyk test (Frontend)
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --severity-threshold=high --json > snyk-frontend-report.json

      # Backend Security Scans  
      - name: Run Bandit (Python Security)
        run: |
          pip install bandit
          bandit -r backend/ -f json -o bandit-report.json || true

      - name: Run Safety (Python Dependencies)
        run: |
          pip install safety
          safety check --json --output safety-report.json || true

      - name: Run Snyk test (Backend)
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json > snyk-backend-report.json

      # Code Quality Analysis
      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Container Security Scan
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      # Upload all security reports
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports-${{ github.run_number }}
          path: |
            npm-audit-report.json
            snyk-frontend-report.json
            bandit-report.json
            safety-report.json
            snyk-backend-report.json
            trivy-results.sarif

      # Create GitHub Issue for critical vulnerabilities
      - name: Create security issue
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Vulnerabilities Detected',
              body: `
                ## Security Scan Alert
                
                Critical security vulnerabilities have been detected in the repository.
                
                **Scan Date:** ${new Date().toISOString()}
                **Workflow Run:** ${{ github.run_id }}
                
                Please review the security reports in the workflow artifacts and address the issues promptly.
                
                ### Actions Required:
                - [ ] Review security scan reports
                - [ ] Update vulnerable dependencies
                - [ ] Test fixes in staging environment
                - [ ] Deploy fixes to production
                
                **Severity:** Critical
                **Priority:** High
              `,
              labels: ['security', 'critical', 'bug']
            })